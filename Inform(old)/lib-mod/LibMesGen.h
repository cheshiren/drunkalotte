! ===========================================================================
!
!   Сообщения из библиотеки, изменяемые в соответствии с родом/числом гг и
!   временем происходящего.
!
! ---------------------------------------------------------------------------

Replace LanguageLM;

Global lm_gender; !1 - муж., 2 - жен., 3 - ср., 4 - мн.ч.
Global lm_time;   !1 - прошлое (ты взял), 2 - настоящее (ты берешь)

[ LanguageLM n x1;

  Prompt:  print "^>";

  Miscellany:
           switch (n)
           {   1: "(ограничиваясь первыми 16 объектами)^";
               2: "Но делать ничего не надо!";
               3: switch (lm_gender)
                  { 1: print " Ты проиграл ";
                    2: print " Ты проиграла ";
                    3: print " Ты проиграло ";
                    4: print " Вы проиграли ";
                  }
               4: switch (lm_gender)
                  { 1: print " Ты выиграл ";
                    2: print " Ты выиграла ";
                    3: print " Ты выиграло ";
                    4: print " Вы выиграли ";
                  }
               5: switch (lm_gender)
                  { 4: print "^Вы хотите ";
                    default: print "^Ты хочешь ";
                  }
                  print " вернуться в НАЧАЛО игры, ЗАГРузить сохранённую игру";
                  #IFDEF DEATH_MENTION_UNDO;
                  print ", сделать ОТКАТ последнего хода, ";
                  #ENDIF;
                  if (TASKS_PROVIDED==0)
                      print ", получить полный СЧЁТ по игре";
                  if (deadflag==2 && AMUSING_PROVIDED==0)
                      print ", получить некоторые ИНТЕРЕСные подсказки";
                  " или закончить (КОНЕЦ) игру?";
               6: "[Интерпретатор не поддерживает отмену хода.]";
               7: "[Отменить ход не удалось.]";
               8: "Нужен один из перечисленных ответов.";
               9: switch (lm_time)
                  { 1: "^И здесь стало совсем темно!";
                    2: "^Теперь здесь непроглядная тьма!";
                  }
              10: switch (lm_gender)
                  { 4: "Простите?";
                    default: "Прости?";
                  }
              11: "[Нельзя отменить то, что не сделано!]";
              12: "[Нельзя отменить два хода подряд!]";
              13: "[Предыдущий ход отменён.]";
              14: "Это невозможно исправить.";
              15: "Исправить это нельзя.";
              16: "Команда @<<ой@>> исправляет только одно слово.";
              17: "Кромешная тьма -- не видно ни зги!";
              18: switch (lm_gender)
                  { 4: print "вы";
                    default: print "ты";
                  }
              19: switch (lm_gender)
                  { 1: print "Ты ";
                      switch (lm_time)
                        { 1: print "выглядел";
                          2: print "выглядишь";
                        }
                    2: print "Ты ";
                      switch (lm_time)
                        { 1: print "выглядела";
                          2: print "выглядишь";
                        }
                    3: print "Ты ";
                      switch (lm_time)
                        { 1: "выглядело";
                          2: "выглядишь";
                        }
                    4: print "Вы ";
                      switch (lm_time)
                        { 1: print "выглядели";
                          2: print "выглядите";
                        }
                  }
                  " как обычно.";
              20: switch (lm_gender)
                  { 4: "Чтобы повторить команду @<<жаба, прыг@>>, введите @<<опять@>> (но не @<<жаба, опять@>>).";
                    default: "Чтобы повторить команду @<<жаба, прыг@>>, введи @<<опять@>> (но не @<<жаба, опять@>>).";
                  }
              21: "Это вряд ли можно повторить.";
              22: "Команда не может начинаться с запятой.";
              23: switch (lm_gender)
                  { 4: "Не понятно, к кому вы обращаетесь.";
                    default: "Не понятно, к кому ты обращаешься.";
                  }
              24: "Бессмысленно говорить с ", (cIns) x1, ".";
              25: "Чтобы обратиться к собеседнику,
                   введите @<<собеседник, привет@>>.";
              26: print "(сначала взяв ";
        if(not_holding == player) "себя)";
        print (cAcc) not_holding; ")";
              27: "Эта команда непонятна.";
              28: print "Из команды понятно только: ";
              29: "Это число непонятно.";
              30: "Этого предмета здесь нет.";
              31: "Ты сказал слишком мало!";
              32: "Этого предмета у тебя нет.";
              33: "С этим действием не допускается много объектов.";
              34: "Множественные объекты допустимы только один раз.";
              35: "Непонятно, к чему относится @<<", (address) pronoun_word, "@>>.";
              36: "Вы исключили нечто не включённое!";
              37: "Действие применимо только к одушевлённым объектам.";
              38: "Этот глагол непонятен.";
              39: "Упоминать это в игре нет необходимости.";
              40: "В данный момент отсутствует @<<",
                  (address) pronoun_word, "@>> (", (cNom) pronoun_obj, ").";
              41: "Конец команды непонятен.";
              42: if (x1==0) print "Ни одного из них нет";
                  else print "Только ", (number) x1, " из них есть";
                  " в наличии.";
              43: "Действий нет!";
              44: "Их здесь просто нет!";
              45: print "Кто имеется в виду: ";
              46: print "Что имеется в виду: ";
              47: "Но здесь доступен только один предмет. Какой именно?";
              48: print "К кому Вы хотите применить команду ";
                  if (actor~=player) print " ",  actor;
                  PrintCommand(); print "?^";
              49: print "К чему Вы хотите применить команду ";
                  if (actor~=player) print " ",  actor;
                  PrintCommand(); print "?^";
              50: print "Ваш счёт ";
                  if (x1 > 0) print "увеличился";
                  else { x1 = -x1; print "уменьшился"; }
                  print " на ", (PScore) x1;
              51: "(Произошло что-то, что укоротило Ваш список команд.)";
              52: "^Введите число от 1 до ", x1,
                  ", 0 для перевывода или нажмите ENTER.";
              53: "^[Нажмите ПРОБЕЛ.]";
              54: "[Комментарий записан.]";
              55: "[Комментарий не записан.]";
              56: print ".^";
              57: print "?^";
           }

  ListMiscellany:
           switch(n)
           {   1: print " (свет", (V2bEnd) x1, ")";
               2: print " (закрыт", (SAEnd) x1, ")";
               3: print " (свет", (V2bEnd) x1, " и закрыт", (SAEnd) x1, ")";
               4: print " (пуст", (SAEnd) x1, ")";
               5: print " (свет", (V2bEnd) x1, " и пуст", (SAEnd) x1, ")";
               6: print " (закрыт", (SAEnd) x1, " и пуст", (SAEnd) x1, ")";
               7: print " (свет", (V2bEnd) x1, ", закрыт", (SAEnd) x1, " и пуст", (SAEnd) x1, ")";
               8: print " (свет", (V2bEnd) x1, " и надет", (SAEnd) x1;
               9: print " (свет", (V2bEnd) x1;
              10: print " (надет", (SAEnd) x1;
              11: print " (";
              12: print "открыт", (SAEnd) x1;
              13: print "открыт", (SAEnd) x1, " и пуст", (SAEnd) x1;
              14: print "закрыт", (SAEnd) x1;
              15: print "закрыт", (SAEnd) x1, " и заперт", (SAEnd) x1;
              16: print " и пуст", (SAEnd) x1;
              17: print " (пуст", (SAEnd) x1, ")";
              18: print " содерж", (V2aEnd) x1, " ";
              19: print " (на ";
              20: print ", над ";
              21: print " (";
              22: print ", внутри ";
           }

  Pronouns: switch(n)
           {   1: print "В данный момент: ";
               2: print "означает ";
               3: print "отсутствует";
               4: "местоимения не определены.";
               5:  ".";
           }

  Order:   print_ret (CCNom) x1, " явно не собира", (V1bEnd) x1, "ся тебя слушать.";

  Quit:    switch (n)
           {   1: print "Ответьте @<<да@>> или @<<нет@>>.";
               2: print "Вы хотите покинуть игру? ";
           }

  Restart: switch(n)
           {   1: print "Вы хотите перезапустить игру? ";
               2: "Перезапустить игру не удалось.";
           }

  Restore: switch(n)
           {   1: "Восстановить игру не удалось.";
               2: "Игра восстановлена.";
           }

  Save:    switch(n)
           {   1: "Сохранить игру не удалось.";
               2: "Игра сохранена.";
           }

  Verify:  switch(n)
           {   1: "Файл игры проверен успешно.";
               2: "Файл игры не прошёл проверку, и может быть повреждён.";
           }

  ScriptOn: switch(n)
           {   1: "Режим транскрипта уже включён.";
               2: "Включение транскрипта:";
               3: "Включить транскрипт не удалось.";
           }

  ScriptOff: switch(n)
           {   1: "Режим транскрипта уже выключен.";
               2: "^Выключение транскрипта.";
               3: "Выключить транскрипт не удалось.";
           }

  NotifyOn:     "Извещения о счёте включены.";

  NotifyOff:    "Извещения о счёте выключены.";

  Places:    switch (n) {
        1:  print "Посещённые места: ";
        2:  print ".^";
  }

  Objects: switch(n)
           {   1: "Найденные предметы:^";
               2: "отсутствуют.";
               3: print " (на себе)";
               4: print " (у тебя)";
               5: print " (у кого-то ещё)";
               6: print " (в @<<", (cNom) x1, "@>>)";
               7: print " (в ", (cPre) x1, ")";
               8: print " (внутри ", (cGen) x1, ")";
               9: print " (на ", (cPre) x1, ")";
              10: print " (нигде нет)";
           }

  Score:   switch (n) {
        1:  print (string) IIF (deadflag, "В эту попытку", "К этому моменту"),
                  " Вы набрали ", (PScore) score,
                  " (из ", MAX_SCORE, " возможных) за ", (PTurns) turns;
        2:  "В этой игре счёт не предусмотрен.";
    }

  FullScore: switch(n)
           {   1: "Полный счёт состо", (string) IIF (deadflag, "ял", "ит"), " из:^";
               2: "за найденные предметы";
               3: "за посещённые места";
               4: "всего (из ", MAX_SCORE, " возможных)";
           }

  Inv:     switch(n)
           {   1: "У тебя с собой ничего нет.";
               2: print "У тебя с собой есть";
               3:  print ":^";
               4:  print ".^";
           }

  Take:    switch(n)
           {   1: print "Ты берёшь ", (cAcc) noun ; 
                !if (noun has female) print "её";
                !else if (noun has pluralname) print "их";
                !else print "его"; 
        ".";
               2: "Ты всегда есть сам у себя.";
               3: print_ret (CCDat) x1, " это вряд ли понравится.";
               4: "Сначала тебе необходимо покинуть ", (cAcc) x1, ".";
               5: print_ret (CCNom) x1, " у тебя уже есть.";
               6: print_ret (CCNom) noun, " явно принадлеж", (V2aEnd) noun, " ",
                  (cDat) x1, ".";
               7: print_ret (CCNom) noun, " явно явля", (V1bEnd) noun, "ся частью ",
                  (cGen) x1, ".";
               8: print_ret (CCNom) x1, " недосягаем", (SAEnd) x1, ".";
               9: print_ret (CCNom) x1, " закрыт", (SAEnd) x1, ".";
              10: print_ret (CCAcc) x1, " невозможно взять.";
              11: print_ret (CCNom) x1, " жёстко закреплён", (SAEnd) x1, ".";
              12: "У тебя с собой слишком много вещей.";
              13: "(укладывая ", (cAcc) x1, " внутрь ", (cGen) SACK_OBJECT,
                  ", чтобы освободить место)";
           }

  Drop:    switch(n)
           {   1: print_ret (CCNom) x1, " уже положен", (SAEnd) x1, ".";
               2: print_ret (CCNom) x1, " не у тебя.";
               3: "(сначала сняв ", (cAcc) x1, " с себя)";
               4: print_ret (CCNom) x1, " положен", (SAEnd) x1, ".";
           }

  Remove:  switch(n)
           {   1: print_ret (CCNom) x1, " закрыт", (SAEnd) x1, ".";
               2: print_ret (CCNom) x1, " не наход", (V2bEnd) x1, "ся ",
                IIF (second has supporter, "на ", "в "), (cPre) second, ".";
               3: print_ret (CCNom) x1, (string) IIF (second has supporter, " поднят", " извлечён"), (SAEnd) x1,
                  (string) IIF (second has supporter, " c ", " из "), (cGen) second, ".";
           }

  PutOn:   switch(n)
           {   1: "Сначала тебе нужно взять ", (cAcc) x1, " в руки.";
               2: "Невозможно положить что-либо на себя.";
               3: "Класть что-либо на ", (cAcc) x1, " бессмысленно.";
               4: "У тебя не хватит ловкости.";
               5: "(сначала сняв ", (cAcc) x1, " с себя)^";
               6: "Больше нет места на ", (cPre) x1, ".";
               7: "Ты кладёшь всё на ", (cAcc) second, ".";
               8: "Ты кладёшь ", (cAcc) x1, " на ", (cAcc) second, ".";
           }

  Insert:  switch(n)
           {   1: "Сначала тебе нужно взять ", (cAcc) x1, " в руки.";
               2: print_ret (CCNom) x1, " не ", (MorM) x1, " что-либо содержать.";
               3: print_ret (CCNom) x1, " закрыт", (SAEnd) x1, ".";
               4: "Сперва ты должна снять ", (cAcc) x1, " с себя.";
               5: "Невозможно вложить что-либо внутрь себя.";
               6: "(сначала сняв ", (cAcc) x1, " с себя)^";
               7: "Больше нет места в ", (cPre) x1, ".";
               8: "Ты кладёшь всё в ", (cAcc) second, ".";
               9: "Ты кладёшь ", (cAcc) x1, " в ", (cAcc) second, ".";
           }

  EmptyT:  switch(n)
           {   1: print_ret (CCNom) x1, " не ", (MorM) x1, " что-либо содержать.";
               2: print_ret (CCNom) x1, " закрыт", (SAEnd) x1, ".";
               3: print_ret (CCNom) x1, " уже пуст", (SAEnd) x1, ".";
               4: "То есть оставить все как есть?";
           }

  Give:    switch(n)
           {   1: "У тебя нет ", (cGen) x1, " с собой.";
               2: print_ret (CCNom) x1, " и так у тебя есть.";
               3: print_ret (CCGen) x1, " это не заинтересовало.";
           }

  Show:    switch(n)
           {   1: "У тебя нет ", (cGen) x1, " с собой.";
               2: print_ret (CCGen) x1, " это не впечатлило.";
           }

  Enter:   switch(n)
           {   1: "Но ты уже ", (string) IIF (x1 has supporter, "на ", "в "),
            (cPre) x1, ".";
               2: "Но на/в ", (cAcc) x1,
                  " невозможно войти, встать, сесть или лечь.";
               3: print_ret (CCNom) x1, " закрыт", (SAEnd) x1,
                ", и ты не можешь войти туда.";
               4: "Ты не можешь войти в то, что у тебя в руках.";
               5: "Ты ", (string) IIF (x1 has supporter, "влез на ", "залез в "),
                  (cAcc) x1, ".";
               6: "(", (string) IIF (x1 has supporter, "слезая с ",
                       IIF (x1 has container, "вылезая из ", "выходя из ")),
                    (cGen) x1, ")^";
               7: "(", (string) IIF (x1 has supporter, "залезая на ",
                       IIF (x1 has container, "влезая в ", "входя в ")),
                    (cAcc) x1, ")^";
           }

  GetOff:  "Но ты не находишься ", IIF (x1 has supporter, "на ", "в "), (cPre) x1, ".";

  Exit:    switch(n)
           {   1: "Но ты сейчас не находишься в/на чем-либо.";
               2: print_ret (CCNom) x1, " закрыт", (SAEnd) x1,
                  ", и ты не можешь выйти.";
               3: "Ты ", (string) IIF (x1 has supporter, "слез с ", " вышел из "),
                  (cGen) x1, ".";
               4:  "Но ты сейчас не ", (string) IIF (x1 has supporter, "на ", "в "),
                  (cPre) x1, ".";
           }

  VagueGo:       "Идти можно только в некотором направлении.";

  Go:      switch(n)
           {   1: "Сперва ты должен ",
               (string) IIF (x1 has supporter, "слезть с ", "выйти из "),
               (cGen) x1, ".";
               2: "Этот путь недоступен.";
               3: "Ты не можешь подняться по ", (cDat) x1, ".";
               4: "Ты не можешь спуститься по ", (cDat) x1, ".";
               5: print_ret (CCNom) x1, " меша", (V1bEnd) x1, " тебе пройти.";
               6: print_ret (CCNom) x1, " никуда не вед", (V1aEnd) x1, ".";
           }

  LMode1:         " сейчас в @<<нормальном@>> режиме^
         (длинные описания для новых мест, краткие для старых).";

  LMode2:         " сейчас в @<<длинном@>> режиме^(всегда длинные описания мест).";

  LMode3:         " сейчас в @<<кратком@>> режиме^(всегда краткие описания мест).";

  Look:    switch(n)
           {   1: print " (на ", (cPre) x1, ")";
               2: print " (в ", (cPre) x1, ")";
               3: print " (как ", (cNom) x1, ")";
               4: print "^На ", (cPre) x1;
                  WriteListFromCase (child(x1),
                      ENGLISH_BIT + RECURSE_BIT + PARTINV_BIT
                      + TERSE_BIT + ISARE_BIT + CONCEAL_BIT, csNom);
                  ".";
               5, 6:
                  if (x1~=location)
                     print (string) IIF (x1 has supporter, "^На ", "^В "), (cPre) x1, " ";
                  else print "^Здесь";
                  if (n==5) print " также";
                  WriteListFromCase (child(x1),
                      ENGLISH_BIT + WORKFLAG_BIT + RECURSE_BIT + ISARE_BIT
                      + PARTINV_BIT + TERSE_BIT + CONCEAL_BIT, csNom);
                  ".";
               7: "В этом направлении не видно ничего примечательного.";
           }

  Examine: switch(n)
           {   1: "ТЕМНОТА (сущ., ж.р.): полное отсутствие света.";
               2: "Ничего особенного в ", (cPre) x1, " ты не видишь.";
               3: print_ret (CCNom) x1, " сейчас ",
                (string) IIF (x1 has on, "в", "вы"), "ключен", (SAEnd) x1, ".";
           }

  LookUnder: switch(n)
           {   1: "Здесь слишком темно для поисков.";
               2: "Ты не находишь под ", (cIns) noun, " ничего интересного.";
           }

  Search:  switch(n)
           {   1: "Здесь слишком темно для поисков.";
               2: "На ", (cPre) x1, " ничего нет.";
               3: print "На ", (cPre) x1;
                  WriteListFromCase (child(x1),
                      TERSE_BIT + ENGLISH_BIT + ISARE_BIT + CONCEAL_BIT, csNom);
                  ".";
               4: "Ты не находишь в ", (cPre) noun, " ничего интересного.";
               5: print_ret (CCNom) x1, " закрыт", (SAEnd) x1,
                  ", и ты не можешь заглянуть внутрь.";
               6: "В ", (cPre) x1, " ничего нет.";
               7: print "В ", (cPre) x1;
                  WriteListFromCase (child(x1),
                      TERSE_BIT + ENGLISH_BIT + ISARE_BIT + CONCEAL_BIT, csNom);
                  ".";
           }

  Lock:    switch(n)
           {   1: print_ret (CCAcc) x1, " невозможно запереть.";
               2: print_ret (CCNom) x1, " уже заперт", (SAEnd) x1, ".";
               3: "Сначала необходимо закрыть ", (cAcc) x1, ".";
               4: print_ret (CCNom) x1, " не подход", (V2bEnd) x1, " к замку.";
               5: "Ты запираешь ", (cAcc) x1, ".";
           }

  Unlock:  switch(n)
           {   1: print_ret (CCAcc) x1, " невозможно отпереть.";
               2: print_ret (CCNom) x1, " не заперт", (SAEnd) x1, ".";
               3: print_ret (CCNom) x1, " не подход", (V2bEnd) x1, " к замку.";
               4: "Ты отпираешь ", (cAcc) x1, ".";
           }

  SwitchOn: switch(n)
           {   1: print_ret (CCAcc) x1, " невозможно включить.";
               2: print_ret (CCNom) x1, " уже включён", (SAEnd) x1, ".";
               3: "Ты включаешь ", (cAcc) x1, ".";
           }

  SwitchOff: switch(n)
           {   1: print_ret (CCAcc) x1, " невозможно выключить.";
               2: print_ret (CCNom) x1, " уже выключен", (SAEnd) x1, ".";
               3: "Ты выключаешь ", (cAcc) x1, ".";
           }

  Open:    switch(n)
           {   1: print_ret (CCAcc) x1, " невозможно открыть.";
               2: "Похоже, что ", (cNom) x1, " заперт", (SAEnd) x1, ".";
               3: print_ret (CCNom) x1, " уже открыт", (SAEnd) x1, ".";
               4: print "Ты открываешь ", (cAcc) x1, ". Внутри";
                  if (WriteListFromCase (child(x1),
                      ISARE_BIT+ ENGLISH_BIT + TERSE_BIT + CONCEAL_BIT, csNom) == 0)
                        "... пустота.";
                  ".";
               5: "Ты открываешь ", (cAcc) x1, ".";
           }

  Close:   switch(n)
           {   1: print_ret (CCAcc) x1, " невозможно закрыть.";
               2: print_ret (CCNom) x1, " уже закрыт", (SAEnd) x1, ".";
               3: "Ты закрываешь ", (cAcc) x1, ".";
           }

  Wear:    switch(n)
           {   1: "Надеть ", (cAcc) x1, " на себя невозможно.";
               2: "У тебя нет ", (cGen) x1, " с собой.";
               3: print_ret (CCNom) x1, " уже на тебе.";
               4: "Ты надеваешь ", (cAcc) x1, " на себя.";
           }

  Disrobe: switch(n)
           {   1: print_ret (CCNom) x1, " не на тебе.";
               2: "Ты снимаешь ", (cAcc) x1, " с себя.";
           }

  Eat:     switch(n)
           {   1: print_ret (CCNom) x1, " явно не год", (V2bEnd) x1, "ся в пищу.";
               2: "Ты съедаешь ", (cAcc) x1, ". Вполне съедобно.";
           }

  Yes, No:        "Вопрос был риторическим.";

  Burn:           print "Поджигать ", (cAcc) x1;
      if (second ~= 0) print " ", (cIns) second;
      " бессмысленно.";

  Pray:           "То ли Бога нет, то ли Он не услышал твои молитвы.";

  Wake:           "Поверь, это не сон, а явь.";

  WakeOther:      "Будить ", (cAcc) x1, " не стоит.";

  Kiss:           "Будет лучше сосредоточиться на игре.";

  Think:          "Отличная идея.";

  Smell:          "Никакого необычного запаха нет.";

  Listen:         "Никаких необычных звуков нет.";

  Taste:          "Никакого необычного вкуса нет.";

  Touch:   switch(n)
           {   1: "Не стоит давать волю рукам.";
               2: "Никаких необычных ощущений нет.";
               3: "Если тебе очень хочется.";
           }

  Dig:            print "Копать ", (cAcc) x1;
      if (second ~= 0) print " ", (cIns) second;
      " бессмысленно.";

  Cut:            "Резать ", (cAcc) x1, " бессмысленно.";

  Jump:           "Ты глупо подпрыгиваешь на месте.";

  JumpOver:   "Прыгать через ", (cAcc) x1, " бессмысленно.";

  Tie:      print "Привязывать ", (cAcc) x1;
      if (second ~= 0) print " к ", (cDat) second;
      " бессмысленно.";

  Drink:          "Выпить ", (cAcc) x1, " невозможно.";

  Fill:           "Наполнять ", (cAcc) x1, " бессмысленно.";

  Sorry:          "О, не нужно извинений.";

  Strong:        "Настоящие квестеры так не выражаются."; 
  Mild:           "Точно.";

    Attack:         "Сила есть -- ума не надо?";

  Swim:           "Для этого здесь недостаточно воды.";

  Swing:          "Качать ", (cAcc) x1, " бессмысленно.";

  Blow:           "Дуть в ", (cAcc) x1, " бессмысленно.";

  Rub:            "Тереть ", (cAcc) x1, " бессмысленно.";

  Set:            "Невозможно установить ", (cAcc) x1, ".";

  SetTo:          "Невозможно установить ", (cAcc) x1, " на что-либо.";

  WaveHands:      "Ты глупо машешь руками.";

  Wave:    switch(n)
           {   1: "Сперва надо взять ", (cAcc) x1, ".";
               2: "Ты глупо машешь ", (cIns) x1, ".";
           }

  Pull, Push, Turn:
           switch(n)
           {   1: print_ret (CCAcc) x1, " трудно сдвинуть с места.";
               2: print_ret (CCAcc) x1, " двигать невозможно.";
               3: "Ничего не произошло.";
               4: print_ret (CCDat) x1, " это вряд ли понравится.";
           }

  PushDir: switch(n)
           {   1: "Передвигать это нет смысла.";
               2: "Двигать можно только в определённом направлении.";
               3: "Двигать в этом направлении невозможно.";
           }

  Squeeze: switch(n)
           {   1: "Не стоит давать волю рукам.";
               2: "Сжимать ", (cAcc) x1, " бессмысленно.";
           }

  ThrowAt: switch(n)
           {   1: "Бросать ", (cAcc) noun, " в ", (cAcc) second, " бесполезно.";
               2: "У тебя не хватает решимости бросить ", (cAcc) noun, " в ", (cAcc) second,
               ".";
           }

  Tell:    switch(n)
           {   1: "Беседы с самим собой -- занятие нездоровое.";
               2: "Твой собеседник никак не отреагировал.";
           }

  Answer, Ask:    "Ответа не последовало.";

  Buy:            print_ret (CCNom) x1, " не прода", (V1bEnd) x1, "ся.";

  Sing:           "С твоим слухом и голосом этого лучше не делать.";

  Climb:          "Забираться на ", (cAcc) x1, " бессмысленно.";
  
  Wait:           "Проходит немного времени.";

  Sleep:          "Сейчас тебя не клонит ко сну.";

  Consult:        "Ты не находишь в ", (cPre) x1, " ничего подходящего.";

  CommandsOff: switch (n) {
        1: "[Запись команд выключена.]";
        #Ifdef TARGET_GLULX;
        2: "[Запись команд уже выключена.]";
        #Endif; ! TARGET_
    }
  CommandsOn: switch (n) {
        1: "[Запись команд включена.]";
        #Ifdef TARGET_GLULX;
        2: "[Воспроизведение записи.]";
        3: "[Запись команд уже включена.]";
        4: "[Запись команд невозможна!]";
        #Endif; ! TARGET_
    }
  CommandsRead: switch (n) {
        1: "[Воспроизведение записи.]";
        #Ifdef TARGET_GLULX;
        2: "[Воспроизведение уже включено.]";
        3: "[Воспроизведение невозможно. Включена запись.]";
        4: "[Воспроизведение невозможно.]";
        5: "[Возпроизведение закончено.]";
        #Endif; ! TARGET_
    }

];

